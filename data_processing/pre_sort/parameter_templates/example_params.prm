

##########################
# Pre-process Parameters #
##########################

experiment_name = 'c57b2s1'



raw_data_files = {'a': [('a_01_data.bin', 'a_01_D2014_10_26T15_19_5_beh.h5', 200000)],
                  'b': [('b_01_data.bin', 'b_01_D2014_10_26T16_51_22_beh.h5')]}

"""
                {rec1: [(run1 ephys_data_fn, run1 voyeur h5_fn, cut_last_N_samples),
                       (runN ephys_data_fn, runN voyeur h5)_fn],
                recN: [(run1 ephys_data_fn, run1 voyeur h5_fn), ...],
                ... }
"""


prb_file = 'NN_buz64s.prb'


chan_config = {'neural': range(0, 64),  # this is required.
            'pl_trigger': 225,
            'starttrial': 227,
            'finalvalve': 224,
            'serial_trial': 226,
            'sniff': 192}


nchannels = len(chan_config['neural'])
acquisition_system = 'whisper'


##########################
# SpikeDetekt parameters #
##########################



nbits = 16
voltage_gain = 10.

sample_rate = 20833



# Filtering
# ---------

filter_low = 500. # Low pass frequency (Hz)
filter_high = 0.95 * .5 * sample_rate
filter_butter_order = 3  # Order of Butterworth filter.

filter_lfp_low = 0  # LFP filter low-pass frequency
filter_lfp_high = 300  # LFP filter high-pass frequency


# Chunks
# ------
chunk_size = int(1. * sample_rate)  # 1 second
chunk_overlap = int(.015 * sample_rate)  # 15 ms

# Spike detection
# ---------------
# Uniformly scattered chunks, for computing the threshold from the std of the
# signal across the whole recording.
nexcerpts = 100
excerpt_size = int(1. * sample_rate)
threshold_strong_std_factor = 4.5
threshold_weak_std_factor = 2.
detect_spikes = 'negative'
#precomputed_threshold = None


save_raw = True
save_high = False
save_low = False

# Connected component
# -------------------
connected_component_join_size = int(.00005 * sample_rate)

# Spike extraction
# ----------------
extract_s_before = 12
extract_s_after = 20
waveforms_nsamples = extract_s_before + extract_s_after

# Features
# --------
nfeatures_per_channel = 3  # Number of features per channel.
pca_nwaveforms_max = 10000


#########################
# KlustaKwik parameters #
#########################
kk_MaskStarts = 500
#kk_MinClusters = 100
#kk_MaxClusters = 110
kk_MaxPossibleClusters =  500
kk_FullStepEvery =  10
kk_MaxIter = 10000
kk_RandomSeed =  654
kk_Debug = 0
kk_SplitFirst = 20
kk_SplitEvery = 40
# Penalties to reduce overclustering:
# PenaltyK = 1, PenaltyKLogN = 0 for a AIC - use for mask mode (high channel count).
# PenaltyK = 0, PenaltyKLogN = 1 for BIC - use for classic mode.
kk_PenaltyK = 1
kk_PenaltyKLogN = 0

kk_Subset = 1
kk_PriorPoint = 1
kk_SaveSorted = 0
kk_SaveCovarianceMeans = 0
kk_UseMaskedInitialConditions = 1
kk_AssignToFirstClosestMask = 1
kk_UseDistributional = 1

kk_RamLimitGB = 120.  # added, this should not be required in the future when kk can see ram availability.